// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/assistant/embedded/v1alpha1/embedded_assistant.proto

package com.google.assistant.embedded.v1alpha1;

public interface ConverseRequestOrBuilder extends
// @@protoc_insertion_point(interface_extends:google.assistant.embedded.v1alpha1.ConverseRequest)
	com.google.protobuf.MessageOrBuilder {

	/**
	 * <pre>
	 * The `config` message provides information to the recognizer that
	 * specifies how to process the request.
	 * The first `ConverseRequest` message must contain a `config` message.
	 * </pre>
	 *
	 * <code>.google.assistant.embedded.v1alpha1.ConverseConfig config = 1;</code> */
	com.google.assistant.embedded.v1alpha1.ConverseConfig getConfig ();

	/**
	 * <pre>
	 * The `config` message provides information to the recognizer that
	 * specifies how to process the request.
	 * The first `ConverseRequest` message must contain a `config` message.
	 * </pre>
	 *
	 * <code>.google.assistant.embedded.v1alpha1.ConverseConfig config = 1;</code> */
	com.google.assistant.embedded.v1alpha1.ConverseConfigOrBuilder getConfigOrBuilder ();

	/**
	 * <pre>
	 * The audio data to be recognized. Sequential chunks of audio data are sent
	 * in sequential `ConverseRequest` messages. The first `ConverseRequest`
	 * message must not contain `audio_in` data and all subsequent
	 * `ConverseRequest` messages must contain `audio_in` data. The audio bytes
	 * must be encoded as specified in `AudioInConfig`.
	 * Audio must be sent at approximately real-time (16000 samples per second).
	 * An error will be returned if audio is sent significantly faster or
	 * slower.
	 * </pre>
	 *
	 * <code>bytes audio_in = 2;</code> */
	com.google.protobuf.ByteString getAudioIn ();

	public com.google.assistant.embedded.v1alpha1.ConverseRequest.ConverseRequestCase getConverseRequestCase ();
}
